name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [12.x]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: Cache cargo modules
        uses: actions/cache@v3
        env:
          cache-name: cache-cargo-modules
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: test
      - name: build
        run: cargo build --release

      # Create new GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload release artifacts
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/dedupfeed
          asset_name: my-binary-${{ matrix.os }}-${{ github.ref }}
          asset_content_type: application/zip
